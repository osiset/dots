#!/usr/bin/env python3
##
## Creates local PDF copies of bookmarks from Buku.
##

import buku
import os
import http.client
import hashlib
from urllib.parse import urlparse
from sys import argv
from subprocess import call, PIPE

def get_status_code(url):
    parts = urlparse(url)

    try:
        conn = http.client.HTTPSConnection(parts.netloc, None, timeout=10)
        conn.request('HEAD', parts.path)
        return conn.getresponse().status
    except Exception:
        return None

# Open database, set output directory
bdb = buku.BukuDb()
recs = bdb.get_rec_all()
output_dir = argv[1] + '/Archive'

# Check for missing directory
if not output_dir:
    print('Output directory to bookmarks is required')
    exit()

for rec in recs:
  # Don't process PDF files
  if rec[1].find('.pdf') > -1:
      continue

  # Create a MD5 hash of the title for PDF output
  md5_url = hashlib.md5(rec[1].encode()).hexdigest()
  output_pdf = '%s/%s.pdf' % (output_dir, md5_url)

  # Don't process if output PDF already exists for this URL
  if os.path.isfile(output_pdf):
      continue

  # Process
  print('Processing %s' % rec[1])

  # Check status code first
  if get_status_code(rec[1]) == None:
    print('Status code error')
    continue

  # Use headless chrome to made a PDF copy
  call('google-chrome --headless --disable-gpu --window-size="1280,1696" --print-to-pdf="%s" %s' % (output_pdf, rec[1]), shell=True, stdout=PIPE, stderr=PIPE)
  
# Now, create the bookmark file
call('rm %s/bookmarks.html' % output_dir, shell=True)
call('buku -e %s/bookmarks.html' % output_dir, shell=True)

